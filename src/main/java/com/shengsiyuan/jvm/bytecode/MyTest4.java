package com.shengsiyuan.jvm.bytecode;

/**
 * 栈帧：stack frame
 *
 * 栈帧用于帮助虚拟机执行方法调用与方法执行的数据结构，每一个线程都有自己的栈帧，不存在并发问题。封装了方法的局部变量表、
 * 动态链接信息、方法的返回地址及操作数栈等信息。
 *
 * 动态链接信息指的是，A类中存在对B类的方法调用，那在编译期间A类和B类之间的地址关系是不知道的，有两种情况下才会知道
 * 第一种是在类加载的时候，第二种是当调用真的发生时才会确定目标方法的地址是什么。基于第二种情况，引申出来了两个概念
 * 符号引用和直接引用 符号引用体现在常量池中的标识，直接引用可以看作是直接指向目标内存地址的指针
 * 有些符号引用在类的加载阶段就会转换成直接引用，称为静态解析
 * 有些符号引用在每次调用的时候才转换成直接引用，称为动态链接，这体现在Java的多态性
 *
 */
public class MyTest4 {

}
